"use strict";(self.webpackChunkgraaf=self.webpackChunkgraaf||[]).push([[18],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>f});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},i=Object.keys(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var s=a.createContext({}),l=function(e){var t=a.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},p=function(e){var t=l(e.components);return a.createElement(s.Provider,{value:t},e.children)},u="mdxType",g={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,i=e.originalType,s=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),u=l(r),d=n,f=u["".concat(s,".").concat(d)]||u[d]||g[d]||i;return r?a.createElement(f,o(o({ref:t},p),{},{components:r})):a.createElement(f,o({ref:t},p))}));function f(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=r.length,o=new Array(i);o[0]=d;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c[u]="string"==typeof e?e:n,o[1]=c;for(var l=2;l<i;l++)o[l]=r[l];return a.createElement.apply(null,o)}return a.createElement.apply(null,r)}d.displayName="MDXCreateElement"},5772:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>g,frontMatter:()=>i,metadata:()=>c,toc:()=>l});var a=r(7462),n=(r(7294),r(3905));const i={sidebar_position:2},o="Creating Your First Graph",c={unversionedId:"quickstart/basics/creating-your-first-graph",id:"quickstart/basics/creating-your-first-graph",title:"Creating Your First Graph",description:"1. In your main.cpp import Graaf:",source:"@site/docs/quickstart/basics/creating-your-first-graph.md",sourceDirName:"quickstart/basics",slug:"/quickstart/basics/creating-your-first-graph",permalink:"/graaf/docs/quickstart/basics/creating-your-first-graph",draft:!1,editUrl:"https://github.com/bobluppes/graaf/tree/main/docs/quickstart/basics/creating-your-first-graph.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"quickstartSidebar",previous:{title:"Graaf Architecture",permalink:"/graaf/docs/quickstart/basics/architecture"},next:{title:"Using Algorithms",permalink:"/graaf/docs/quickstart/basics/using-algorithms"}},s={},l=[{value:"Congratulations! You just created the following graph \ud83c\udf89",id:"congratulations-you-just-created-the-following-graph-",level:3}],p={toc:l},u="wrapper";function g(e){let{components:t,...i}=e;return(0,n.kt)(u,(0,a.Z)({},p,i,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"creating-your-first-graph"},"Creating Your First Graph"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"In your ",(0,n.kt)("inlineCode",{parentName:"li"},"main.cpp")," import Graaf:")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-c++"},"#include <graaflib/graph.h>\n")),(0,n.kt)("ol",{start:2},(0,n.kt)("li",{parentName:"ol"},"Define a directed graph ",(0,n.kt)("inlineCode",{parentName:"li"},"g"))),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-c++"},"graaf::directed_graph<const char, int> g;\n")),(0,n.kt)("ol",{start:3},(0,n.kt)("li",{parentName:"ol"},"Add vertices to the graph:")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-c++"},"const auto a = g.add_vertex('a');\nconst auto b = g.add_vertex('b');\nconst auto c = g.add_vertex('c');\n")),(0,n.kt)("ol",{start:4},(0,n.kt)("li",{parentName:"ol"},"Connect the vertices with edges:")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-c++"},"g.add_edge(a, b, 1);\ng.add_edge(a, c, 1);\n")),(0,n.kt)("ol",{start:5},(0,n.kt)("li",{parentName:"ol"},"Putting it all together:")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-c++"},"#include <graaflib/graph.h>\n\nint main()\n{\n    graaf::directed_graph<const char, int> g;\n\n    const auto a = g.add_vertex('a');\n    const auto b = g.add_vertex('b');\n    const auto c = g.add_vertex('c');\n\n    g.add_edge(a, b, 1);\n    g.add_edge(a, c, 1);\n\n    return 0;\n}\n")),(0,n.kt)("h3",{id:"congratulations-you-just-created-the-following-graph-"},"Congratulations! You just created the following graph \ud83c\udf89"),(0,n.kt)("p",null,(0,n.kt)("img",{alt:"Directed graph example",src:r(212).Z,width:"1150",height:"757"})))}g.isMDXComponent=!0},212:(e,t,r)=>{r.d(t,{Z:()=>a});const a=r.p+"assets/images/Graph-277f3510ae4cef53e2f6b95aa1549cae.png"}}]);